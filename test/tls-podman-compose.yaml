networks:
  toolbox:
    driver: bridge

services:
  kafka:
    image: docker.io/bitnami/kafka:4.0.0
    environment:
      # KRaft
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      # Listeners
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,SSL://:9095
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:SSL,SSL:SSL
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,SSL://:9095
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: SSL
      # SASL
      KAFKA_CFG_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
      KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_CONTROLLER_USER: controller_user
      KAFKA_CONTROLLER_PASSWORD: controller_password
      KAFKA_CLIENT_USERS: user
      KAFKA_CLIENT_PASSWORDS: password
      # SSL
      KAFKA_TLS_TYPE: JKS # or PEM
      KAFKA_CERTIFICATE_PASSWORD: password
    volumes:
      - ./certs/keystore/kafka.keystore.jks:/opt/bitnami/kafka/config/certs/kafka.keystore.jks:ro
      - ./certs/truststore/kafka.truststore.jks:/opt/bitnami/kafka/config/certs/kafka.truststore.jks:ro
    networks:
      - toolbox

  kcat:
    image: docker.io/edenhill/kcat:1.7.1
    container_name: kcat
    environment:
      KAFKA: "kafka:9092"
    entrypoint: "/bin/ash -c 'tail -f /etc/passwd'"
    networks:
      - toolbox

  dev-container:
    image: golang:1.22.12-bookworm
    container_name: go-dev
    entrypoint: "tail -f /etc/passwd"
    volumes:
      - type: bind
        source: ../
        target: /app
    networks:
      - toolbox

  pubsub:
    image: gcr.io/google.com/cloudsdktool/google-cloud-cli:emulators
    ports:
      - "8085:8085"
    command: "gcloud beta emulators pubsub start --project=acme --host-port='0.0.0.0:8085'"
    networks:
      - toolbox
